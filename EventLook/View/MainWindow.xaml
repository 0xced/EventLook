<Window x:Class="EventLook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EventLook"
        xmlns:v="clr-namespace:EventLook.View"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainVm, Mode=OneWay}"
        ResizeMode="CanResizeWithGrip"
        Title="EventLook">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="conv" />
        <v:EventLevelToDisplayTextConverter x:Key="EventLevelToDisplayTextConverter"/>
        <v:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <!-- This next line instantiates a CollectionViewSource with the collection of Events as its collection of objects-->
        <CollectionViewSource Source="{Binding Events}" x:Key="X_CVS"/>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" >
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}" />
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
            <ComboBox  
                  ItemsSource="{Binding LogSources}" SelectedItem="{Binding SelectedLogSource}"
                  DisplayMemberPath="Name" SelectedValuePath="Name" 
                  HorizontalAlignment="Left" Margin="10,0,0,0" Width="235" />

            <ComboBox  
                      ItemsSource="{Binding Ranges}" SelectedItem="{Binding SelectedRange}"
                      DisplayMemberPath="Text" SelectedValuePath="Text"
                      HorizontalAlignment="Left" Margin="10,0,0,0" Width="105" />
            <TextBlock Text="From:" Margin="10,0,0,0" VerticalAlignment="Center"/>
            <xctk:DateTimePicker Format="SortableDateTime" Margin="10,0,0,0" Width="160"  
                                 AutoCloseCalendar="True" 
                                 IsReadOnly="{Binding SelectedRange.IsCustom, Converter={StaticResource InverseBooleanConverter}}"
                                 Value="{Binding FromDateTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <TextBlock Text="To:" Margin="10,0,0,0" VerticalAlignment="Center"/>
            <xctk:DateTimePicker Format="SortableDateTime" Margin="10,0,0,0" Width="160" 
                                 AutoCloseCalendar="True"
                                 IsReadOnly="{Binding SelectedRange.IsCustom, Converter={StaticResource InverseBooleanConverter}}"
                                 Value="{Binding ToDateTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <Button Margin="10,0,0,0" Width="25" Height="25"
                FontFamily="{StaticResource WingDings3}" Content="P" Command="{Binding RefreshCommand, Mode=OneWay}" />
            <Button Margin="10,0,0,0" Width="25" Height="25"
                Command="{Binding CancelCommand, Mode=OneWay}" IsEnabled="{Binding IsUpdating}">
                <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
            </Button>
            </StackPanel>
            
            <Expander Header="Filters" Grid.Row="1" Margin="10,5,0,0" ExpandDirection="Down">
                <StackPanel Orientation="Horizontal">
                    <xctk:CheckComboBox Width="200" Margin="10,0,0,0" 
                            IsSelectAllActive="True"
                            ItemsSource="{Binding SourceFilters}" DisplayMemberPath="Name" SelectedMemberPath="Selected" />
                    <Button Content="Reset" Margin="10,0,0,0" Width="50" Command="{Binding ResetFiltersCommand, Mode=OneWay}"/>
                </StackPanel>
            </Expander>
            <!-- *** The ItemsSource of the data grid is bound to the CollectionViewSource object that was instantiated above -->
            <DataGrid ItemsSource="{Binding Source={StaticResource X_CVS}}" Margin="5" Grid.Row="2" AutoGenerateColumns="False" IsReadOnly="True"
                  BorderBrush="LightSteelBlue" HorizontalGridLinesBrush="LightSteelBlue" VerticalGridLinesBrush="LightSteelBlue">
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }" Color="Black"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Time of event" Binding="{Binding TimeOfEvent, StringFormat=u}"/>
                    <DataGridTextColumn Header="Source" Binding="{Binding Record.ProviderName}" MaxWidth="200">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Level" Binding="{Binding Record.Level, Converter={StaticResource EventLevelToDisplayTextConverter}}"/>
                    <DataGridTextColumn Header="Event ID" Binding="{Binding Record.Id}"/>
                    <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </DockPanel>
</Window>
