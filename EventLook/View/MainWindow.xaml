<Window x:Class="EventLook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EventLook"
        xmlns:v="clr-namespace:EventLook.View"
        mc:Ignorable="d"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainVm, Mode=OneWay}"
        ResizeMode="CanResizeWithGrip"
        Title="EventLook">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="conv" />
        <v:EventLevelToDisplayTextConverter x:Key="EventLevelToDisplayTextConverter"/>
        <!-- This next line instantiates a CollectionViewSource with the collection of Events as its collection of objects-->
        <CollectionViewSource Source="{Binding Events}" x:Key="X_CVS"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="10*" />
        </Grid.ColumnDefinitions>

        <ComboBox Grid.Row="0" Grid.Column="0"
                  ItemsSource="{Binding LogSources}" SelectedItem="{Binding SelectedLogSource}"
                  DisplayMemberPath="Name" SelectedValuePath="Name" 
                  HorizontalAlignment="Left" Margin="10,0,0,0" Width="235" />
        <Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" Margin="10,0,0,0" Width="25" Height="25"
                FontFamily="{StaticResource WingDings3}" Content="P" Command="{Binding RefreshCommand, Mode=OneWay}" />
        <Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" Margin="40,0,0,0" Width="25" Height="25"
                Command="{Binding CancelCommand, Mode=OneWay}" IsEnabled="{Binding IsUpdating}">
            <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
        </Button>

        <!-- *** The ItemsSource of the data grid is bound to the CollectionViewSource object that was instantiated above -->
        <DataGrid ItemsSource="{Binding Source={StaticResource X_CVS}}" Margin="5" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" AutoGenerateColumns="False" IsReadOnly="True"
                  BorderBrush="LightSteelBlue" HorizontalGridLinesBrush="LightSteelBlue" VerticalGridLinesBrush="LightSteelBlue">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }" Color="Black"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Time of event" Binding="{Binding TimeOfEvent, StringFormat=u}"/>
                <DataGridTextColumn Header="Source" Binding="{Binding Record.ProviderName}" MaxWidth="200">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Level" Binding="{Binding Record.Level, Converter={StaticResource EventLevelToDisplayTextConverter}}"/>
                <DataGridTextColumn Header="Event ID" Binding="{Binding Record.Id}"/>
                <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}" />
            </StatusBarItem>
        </StatusBar>
        
    </Grid>
</Window>
