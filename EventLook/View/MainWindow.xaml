<Window x:Class="EventLook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EventLook"
        xmlns:v="clr-namespace:EventLook.View"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainVm, Mode=OneWay}"
        ResizeMode="CanResizeWithGrip"
        Title="{Binding MainWindowTitle}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="conv" />
        <v:EventLevelToDisplayTextConverter x:Key="EventLevelToDisplayTextConverter"/>
        <v:ExpandedToGridLengthConverter x:Key="ExpandedToGridLengthConverter"/>
        <v:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <!-- This next line instantiates a CollectionViewSource with the collection of Events as its collection of objects-->
        <CollectionViewSource Source="{Binding Events}" x:Key="X_CVS"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding CancelCommand}"/>
    </Window.InputBindings>
    
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" >
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}" />
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="{Binding ElementName=Ex1, Path=IsExpanded, Converter={StaticResource ExpandedToGridLengthConverter}, ConverterParameter=25}" />
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,5">
                <ComboBox  
                  ItemsSource="{Binding LogSources}" SelectedItem="{Binding SelectedLogSource}"
                  DisplayMemberPath="Name" SelectedValuePath="Name" 
                  HorizontalAlignment="Left" Margin="10,0,0,0" Width="235" />

                <ComboBox  
                      ItemsSource="{Binding Ranges}" SelectedItem="{Binding SelectedRange}"
                      DisplayMemberPath="Text" SelectedValuePath="Text"
                      HorizontalAlignment="Left" Margin="10,0,0,0" Width="105" />
                <TextBlock Text="From:" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                <xctk:DateTimePicker Format="SortableDateTime" Margin="8,0,0,0" Width="160"  
                                 AutoCloseCalendar="True" 
                                 IsReadOnly="{Binding SelectedRange.IsCustom, Converter={StaticResource InverseBooleanConverter}}"
                                 Value="{Binding FromDateTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                <TextBlock Text="To:" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                <xctk:DateTimePicker Format="SortableDateTime" Margin="8,0,0,0" Width="160" 
                                 AutoCloseCalendar="True"
                                 IsReadOnly="{Binding SelectedRange.IsCustom, Converter={StaticResource InverseBooleanConverter}}"
                                 Value="{Binding ToDateTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                <Button Margin="15,0,0,0" Width="25" Height="25">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUpdating}" Value="False">
                                    <Setter Property="Command" Value="{Binding RefreshCommand, Mode=OneWay}"/>
                                    <Setter Property="FontFamily" Value="{StaticResource WingDings3}"/>
                                    <Setter Property="Content" Value="P" />
                                    <Setter Property="ToolTip" Value="Refresh (F5)"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsUpdating}" Value="True">
                                    <Setter Property="Command" Value="{Binding CancelCommand, Mode=OneWay}"/>
                                    <Setter Property="FontFamily" Value="Verdana"/>
                                    <Setter Property="Content" Value="X" />
                                    <Setter Property="ToolTip" Value="Stop (Esc)"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <Expander x:Name="Ex1" Header="Filters" Grid.Row="1" Margin="10,0,0,0" ExpandDirection="Down">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Source: " Margin="5,0,0,0" VerticalAlignment="Center"/>
                    <xctk:CheckComboBox Width="220" 
                            IsSelectAllActive="True"
                            Delimiter=", "
                            ItemsSource="{Binding SourceFilters}" DisplayMemberPath="Name" SelectedMemberPath="Selected"
                            Command="{Binding ApplySourceFilterCommand}"/>
                    <TextBlock Text="Level: " Margin="5,0,0,0" VerticalAlignment="Center"/>
                    <xctk:CheckComboBox Width="120" 
                            IsSelectAllActive="True"
                            Delimiter=", "
                            ItemsSource="{Binding LevelFilters}" SelectedMemberPath="Selected"
                            Command="{Binding ApplyLevelFilterCommand}"/>
                    <TextBlock Text="Event ID: " Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding IdFilter.IdFilterNum, TargetNullValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                             Width="50" VerticalContentAlignment="Center" />
                    <TextBlock Text="Message contains: " Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding MsgFilter.MessageFilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                             Width="150" VerticalContentAlignment="Center" />
                    <Button Content="Reset all" Margin="10,0,0,0" Width="50" Command="{Binding ResetFiltersCommand, Mode=OneWay}"/>
                </StackPanel>
            </Expander>

            <!-- *** The ItemsSource of the data grid is bound to the CollectionViewSource object that was instantiated above -->
            <DataGrid ItemsSource="{Binding Source={StaticResource X_CVS}}" Margin="5" Grid.Row="2" AutoGenerateColumns="False" IsReadOnly="True"
                  BorderBrush="LightSteelBlue" HorizontalGridLinesBrush="LightSteelBlue" VerticalGridLinesBrush="LightSteelBlue" AllowDrop="True" PreviewDragOver="OnPreviewDragOver" Drop="onDrop">
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }" Color="Black"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Time of event" Binding="{Binding TimeOfEvent, StringFormat=u}"/>
                    <DataGridTextColumn Header="Source" Binding="{Binding Record.ProviderName}" MaxWidth="200">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Level" Binding="{Binding Record.Level, Converter={StaticResource EventLevelToDisplayTextConverter}}"/>
                    <DataGridTextColumn Header="Event ID" Binding="{Binding Record.Id}"/>
                    <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </DockPanel>
</Window>
